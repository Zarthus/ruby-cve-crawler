require_relative 'spec_helper'

describe CVE::Parser do
  crawler_mock = CrawlerResultMock.new
  parser = CVE::Parser.new

  it 'should parse a full xml body with three items and return an array of CVE items' do
    result = parser.parse(crawler_mock.xml_full)

    expect(result).to be_a(Array)
    expect(result.length).to eq(3)

    all_cve_items = true
    result.each do |value|
      all_cve_items = all_cve_items && value.is_a?(CVE::Vulnerability)
    end

    expect(all_cve_items).to equal(true)
  end

  it 'should raise an error when non-xml is passed' do
    expect{ parser.parse('Not xml') }.to raise_error(RuntimeError)
  end

  it 'should parse individual items' do
    vulns = []

    3.times do
      vulns << VulnerabilityMock.generate
    end

    contents = RSSMock.new(vulns)
    items = parser.parse_items(contents)

    3.times do |i|
      expect(items[i].equal?(vulns[i])).to eq(true)
    end
  end

  it 'should extract the CVE identifier from a title' do
    title = VulnerabilityMock.new.title

    expect(parser.extract_cve_identifier(title)).to match(/^CVE\-\d{4}\-\d+$/)
  end

  it 'should accept a custom filter' do
    CVE::Parser.new(CVE::Filter.new)
  end

  it 'should accept an array of custom filters' do
    CVE::Parser.new([CVE::Filter.new, CVE::Filter.new])
  end
end
