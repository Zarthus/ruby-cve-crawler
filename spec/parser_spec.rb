require_relative 'spec_helper'

describe CVE::Parser do
  crawler_mock = CrawlerResultMock.new
  parser = CVE::Parser.new

  it 'should parse one item and return a CVEItem' do
    result = parser.parse_item(crawler_mock.cve_result_item(1))

    expect(result).to be_a(CVE::Vulnerability)
  end

  it 'should parse three items and return an three-sized array, each containing a CVE Item' do
    result = parser.parse_items(crawler_mock.cve_result_item(3))

    assert_against_cve_array(3, result)
  end

  it 'should parse a full xml body with three items and return an array of CVE items' do
    result = parser.parse(crawler_mock.xml_full(3))

    assert_against_cve_array(3, result)
  end


  it 'should raise an error when non-xml is passed' do
    expect(parser.parse('Not xml')).to raise_error
  end

  it 'should raise an error when invalid xml is passed' do
    mocker = VulnerabilityMock.new
    id = 'garbage'

    item = crawler_mock.cve_generate_item(
      CVE::Vulnerability.new({
        :identifier => id,
        :title => mocker.title(id),
        :link => mocker.link(id),
        :description => mocker.description,
        :date => mocker.date
      })
    )

    expect(parser.parse_item(item)).to raise_error
  end

  it 'should accept a custom filter' do
    CVE::Parser.new(CVE::Filter.new)
  end

  it 'should accept an array of custom filters' do
    CVE::Parser.new([CVE::Filter.new, CVE::Filter.new])
  end
end
