require 'rspec'
require_relative File.join('..', 'lib', 'cve_crawler', 'cve_core')

class CrawlerResultMock
  def cve_result_item(amount=1)
    # https://nvd.nist.gov/download/nvd-rss.xml
    items = [
      '<item rdf:about="http://web.nvd.nist.gov/view/vuln/detail?vulnId=CVE-2015-4500">
        <title>CVE-2015-4500 (firefox, firefox_esr)</title>
        <link>http://web.nvd.nist.gov/view/vuln/detail?vulnId=CVE-2015-4500</link>
        <description>Multiple unspecified vulnerabilities in the browser engine in Mozilla Firefox before 41.0 and Firefox ESR 38.x before 38.3 allow remote attackers to cause a denial of service (memory corruption and application crash) or possibly execute arbitrary code via unknown vectors.</description>
        <dc:date>2015-09-24T04:59:02Z</dc:date>
      </item>',
      '<item rdf:about="http://web.nvd.nist.gov/view/vuln/detail?vulnId=CVE-2015-4501">
        <title>CVE-2015-4501 (firefox)</title>
        <link>http://web.nvd.nist.gov/view/vuln/detail?vulnId=CVE-2015-4501</link>
        <description>Multiple unspecified vulnerabilities in the browser engine in Mozilla Firefox before 41.0 allow remote attackers to cause a denial of service (memory corruption and application crash) or possibly execute arbitrary code via unknown vectors.</description>
        <dc:date>2015-09-24T04:59:03Z</dc:date>
      </item>',
      '<item rdf:about="http://web.nvd.nist.gov/view/vuln/detail?vulnId=CVE-2015-4502">
        <title>CVE-2015-4502 (firefox)</title>
        <link>http://web.nvd.nist.gov/view/vuln/detail?vulnId=CVE-2015-4502</link>
        <description>js/src/proxy/Proxy.cpp in Mozilla Firefox before 41.0 mishandles certain receiver arguments, which allows remote attackers to bypass intended window access restrictions via a crafted web site.</description>
        <dc:date>2015-09-24T04:59:04Z</dc:date>
      </item>'
    ]

    ret = []

    amount.each do
      ret << items.sample
    end

    ret
  end

  def cve_generate_item(cve_item)
    "<item rdf:about=\"http://web.nvd.nist.gov/view/vuln/detail?vulnId=CVE-2015-4500\">
          <title>#{cve_item.title}</title>
        <link>#{cve_item.link}</link>
        <description>#{cve_item.description}</description>
    <dc:date>#{cve_item.date.iso8601}</dc:date>
    </item>"
  end

  def xml_full(amount=3)
    <<-eos
<?xml version="1.0" encoding="utf-8"?>'
<rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" xmlns="http://purl.org/rss/1.0/" xmlns:dc="http://purl.org/dc/elements/1.1/">
  <channel rdf:about="http://web.nvd.nist.gov/view/vuln/search">
  </channel>
    #{cve_result_item(amount)}
</tdf:RDF>
    eos
  end
end

class VulnerabilityMock
  def self.generate
    mocker = VulnerabilityMock.new
    id = mocker.identifier

    CVE::Vulnerability.new({
      :identifier => id,
      :title => mocker.title(id),
      :link => mocker.link(id),
      :description => mocker.description,
      :date => mocker.date
    })
  end

  def identifier
    year = DateTime.now.year
    "CVE-#{rand(2000..year)}-#{rand(0..9999)}"
  end

  def title(id=nil)
    (id || identifier) + ' (' + ['Lorem Ipsum', 'Some vulnerability', 'Your favourite software',
      'Firefox', 'Chromium', 'Thunderbird'].sample.split('').shuffle.join + ')'
  end

  def link(id=nil)
    'http://web.nvd.nist.gov/view/vuln/detail?vulnId=' + (id || identifier)
  end

  def description
    ['Hakuna Matata', 'What a wonderful phrase', 'Ain\'t no passing phrase', 'It means no worries',
      'for the rest of your days', 'It\'s our problem-free philosophy', 'Yeah. That\'s our motto',
      'What\'s a motto?'].sample.split('').shuffle.join
  end

  def date
    DateTime.now.iso8601
  end
end

def assert_against_cve_array(amount, result)
  expect(result).to be_a(Array)
  expect(result.count).to equal(amount)

  all_cve_items = true
  result.each do |value|
    all_cve_items = all_cve_items && value.is_a?(CVECrawler::Vulnerability)
  end

  expect(all_cve_items).to equal(true)
end
