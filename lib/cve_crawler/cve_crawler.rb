require 'net/https'
require 'uri'

module CVE
  class Crawler
    DATA_FEED_DEFAULT = URI('https://nvd.nist.gov/download/nvd-rss.xml')
    DATA_FEED_ANALYZED = URI('https://nvd.nist.gov/download/nvd-rss-analyzed.xml')

    def initialize(type, verify_cert, user_agent)
      @crawl_url = type.downcase == 'analyzed' ? DATA_FEED_ANALYZED : DATA_FEED_DEFAULT
      @verify_cert = verify_cert ? OpenSSL::SSL::VERIFY_PEER : OpenSSL::SSL::VERIFY_NONE
      @user_agent = user_agent
    end

    attr_reader :crawl_url, :verify_cert, :user_agent

    def crawl
      http = Net::HTTP.new(@crawl_url.host, @crawl_url.port)
      http.use_ssl = @crawl_url.scheme == 'https'

      if http.use_ssl?
        http.verify_mode = @verify_cert
      end

      request = Net::HTTP::Get.new(@crawl_url, {:'User-Agent' => @user_agent})
      response = http.request(request)

      response.value  # Raise an error if status is not 200

      response
    end

    def inspect
      "#<Crawler url=#{@crawl_url.to_s}>"
    end
  end
end
